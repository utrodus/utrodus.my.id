{"hash":"630af41d5bf53533bee15d9b9151a533e3b83b7d","data":{"tag":{"title":"ECommerce","belongsTo":{"edges":[{"node":{"title":"WooCommerce site to single page app in no time","path":"/post/woo-commerce-site-to-single-page-app-in-no-time/","date":"14. July 2019","timeToRead":3,"description":"Did you know you can build and deploy your JAMStack site in less than 5 minutes? Yes, it is possible thanks to Stackbit, an online service that scaffolds a JAMStack website from scratch using different technologies. It uses pre-built themes, different static site generators, connect it to CMS of your choice and then publish your site to Github and Netlify. And it is free to use.","content":"<p>Have you ever wondered how to turn your plain old WooCommerce website to a new single page app that, surprisingly runs fast and with much better user experience? What if I tell you that you can achieved that goal in less than five minutes? Okay, I know, it sounds ridiculous. Let me show you how.</p>\n<h2 id=\"turning-your-woocommerce-wordpress-site-to-a-single-page-application-with-vuejs\"><a href=\"#turning-your-woocommerce-wordpress-site-to-a-single-page-application-with-vuejs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Turning your WooCommerce Wordpress site to a single page application with Vue.js</h2>\n<p>Before we begin, I assumed you already know how to install a Wordpress site and set up WooCommerce plugin. If yes, you can proceed to second part of the tutorial and if not, please continue as follows.</p>\n<h1 id=\"1st-part\"><a href=\"#1st-part\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1st Part</h1>\n<p>In this part, we will basically just install Wordpress and WooCommerce and set up our site.</p>\n<h2 id=\"step-1-install-laragon\"><a href=\"#step-1-install-laragon\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 1: Install Laragon</h2>\n<p>Laragon is a portable, isolated and fast development environment. Think about it as an alternative to XAMPP and WAMP but way better. Go ahead and download the file <a href=\"https://laragon.org/download/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<h2 id=\"step-2-create-a-wordpress-site\"><a href=\"#step-2-create-a-wordpress-site\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 2: Create a Wordpress Site.</h2>\n<p>Run Laragon, start all the components and create a Wordpress site from the notification panel (see the pictures attached below)\n<img src=\"https://i.imgur.com/LRBsp0d.png\" alt=\"Imgur\">\n<img src=\"https://i.imgur.com/7d7KCxI.png\" alt=\"Imgur\"></p>\n<p>Laragon will automatically create a database for you based on the name of the project.</p>\n<h2 id=\"step-3-install-woocommerce-plugin\"><a href=\"#step-3-install-woocommerce-plugin\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 3: Install WooCommerce plugin</h2>\n<p>After creating and setting up a Wordpress site, go ahead and go the dashboard > plugins and install the WooCommerce plugin. Activate the plugin and finish the installation. You now have the working ecommerce wordpress site.\n<img src=\"https://i.imgur.com/Dmpb56A.png\" alt=\"Imgur\">\nThis is what your ecommerce WooCommerce wordpress looks like.\nNow that we finished setting up your WooCommerce site, let's proceed to the second part of the tutorial. We will turn this simple ecommerce to an amazing single page app using Vue.js.</p>\n<h1 id=\"2nd-part\"><a href=\"#2nd-part\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2nd Part</h1>\n<p>Now this is the fun part of the tutorial. We are going to use this amazing project called VueFront. VueFront is a Vue powered CMS agnostic front-end framework that allows owners and developers of an old-fashioned blog or e-commerce site to quickly switch to a SPA progressive web app. Yes. You read it right. Quickly, as in, really fast.\nVueFront has 2 important components, first, the CMS Connect app, a plugin which acts as a binder for your WooCommerce site and VueFront app that returns a GraphQL endpoint; you need this endpoint to access all the data from your WooCommerce site and the second one, the VueFront CLI (command line interface) which scaffolds Vuefront app for you. To know more about this amazing project, please proceed <a href=\"https://vuefront.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<h2 id=\"step-1-install-nodejs\"><a href=\"#step-1-install-nodejs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 1: Install Node.js</h2>\n<p>We need Node.js and npm (yarn in my case) to install the dependencies for our Vue app and to run our project. So go ahead and go to Node.js official website and download the latest version. If you have outdated version of Node.js installed, please update your version to latest one.</p>\n<h2 id=\"step-2-install-cms-connect-app-as-a-wordpress-plugin\"><a href=\"#step-2-install-cms-connect-app-as-a-wordpress-plugin\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 2: Install CMS Connect App as a Wordpress plugin</h2>\n<p>In order for VueFront to access your WooCommerce data, you need to use and install CMS Connect App. This CMS Connect app will act as a binder for your WooCommerce website and your VueFront app. Go ahead and download the CMS Connect app <a href=\"https://vuefront.com/cms/wordpress.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>. Once you download the plugin, install it in your WooCommerce site and activate. Once you activate the plugin, it will look like this. It will return an endpoint which you need to copy before proceeding to the next step.\n<img src=\"https://i.imgur.com/1Z1FdW6.png\" alt=\"Imgur\"></p>\n<h2 id=\"step-3-using-vuefront\"><a href=\"#step-3-using-vuefront\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 3: Using VueFront</h2>\n<p>Create a new folder on your desktop or wherever you want your project to install VueFront. I am going to use yarn instead of npm for better experience.</p>\n<pre class=\"language-js\"><code class=\"language-js\">yarn create vuefront<span class=\"token operator\">-</span>app <span class=\"token operator\">&lt;</span>project<span class=\"token operator\">-</span>name<span class=\"token operator\">></span>\ncd to <span class=\"token operator\">&lt;</span>project<span class=\"token operator\">-</span>name<span class=\"token operator\">></span>\nyarn dev</code></pre>\n<p>The code above will create a new Vue.js project for you. project-name is the name of the project you choose. It will automatically install all the dependencies to run the project. This will also prompt you to put the endpoint you copy from the CMS Connect App plugin from your WooCommerce site.\nOnce you successfully create and run the project, visit <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:3000</a>. Your new SPA progressive web app will look something like this:\n<img src=\"https://i.imgur.com/e6tKtAi.png\" alt=\"Imgur\"></p>\n<p>Voila! You have a new single page app, progressive, fast and has way better experience than your typical WooCommerce site. Of course you can edit the UI and the look and feel of your website. For more customization, read the VueFront official documentation.\nTake note: VueFront is still in beta version, expect changes in the future release of the project.</p>\n<p>That's it for now. On the future blog post, I will show you how to customize the components of your new SPA WooCommerce site. So stay tuned. ðŸ˜ƒ\nThank you for reading this post!</p>\n<h2 id=\"happy-coding\"><a href=\"#happy-coding\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Happy Coding!</h2>\n"}}]}}},"context":{}}